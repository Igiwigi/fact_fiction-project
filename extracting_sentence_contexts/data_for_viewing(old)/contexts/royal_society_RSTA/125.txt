modelling the Turing mechanism show various pattern morphologies [20-22], the most common
of which are hexagonal arrays of spots and randomly oriented stripes [23]. These patterns bear a
striking resemblance to many instances of biological patterning, such as angelfish and zebrafish
skin [24], zebra stripes [7,25] and leopard spots [7].

Despite the visual similarities between these biological patterns and patterns simulated using
a Turing-type mechanism, many biologists were skeptical of the applicability of a mechanism
that was based predominantly on mathematical and physical-chemical principles [26]. While

some saw the potential feasibility of the Turing mechanism in explaining the development of : 4
hydra tentacles or phyllotaxis in plant buds [27,28], it was at the time experimentally unverifiable 1
[27-29]. In fact, the equations Turing proposed often led to negative morphogen concentrations 8
(a fact he noted in his own work) [1,28]. Thus, the Turing mechanism did not gain much : Ss
popularity among biologists until Gierer and Meinhardt independently rediscovered it in 1972 1S

[30] (they were unaware of Turing’s work until a reviewer pointed it out). Gierer and Meinhardt
also formalized the pattern-forming mechanism into an interaction between two (or two groups
of) chemicals: an ‘activator’ and an ‘inhibitor’ [30]. The activator increases its own production
(usually in an autocatalytic manner), and the inhibitor limits the production of the activator
[30,31]. When the two chemicals are well-mixed, the activator-inhibitor system goes to a stable
uniform concentration. However, if the system is spatially extended (unstirred) and the inhibitor
diffuses much faster than the activator, the diffusion may destabilize the uniform state, leading to
spatial pattern formation via a diffusion-driven instability [7,30]. The short-range activation and
long-range inhibition (referred to as SRALRI in the remainder of the text) conditions have since
been commonly used to screen for potential systems capable of generating patterns via a Turing