Technological progress in hetero-
approximation when t — 0. That is, mature technologies will geneous systems is not always smooth and the system jumps
be more difficult to improve over long timescales because inno- between phases of stable and predictable changes and chaotic
vations take exponentially longer to achieve as cost decreases restructuring phases (or ‘learning bursts’).
(or performance increases). The abovementioned fact suggests how we can accelerate
This prediction assumes that there are no other bottlenecks the rate of technological improvement by simplifying designs.
slowing down the learning process. Real technological pro- There is no evidence of significant improvements in program-
gress is a more complex story, e.g. the number of transistors mer productivity, even when the best software practices
on microprocessors has not doubled very regularly and there (i.e. like ‘code refactorings’) engage in active simplification
are strong deviations from the exponential trend [13]. In of software structures [53].