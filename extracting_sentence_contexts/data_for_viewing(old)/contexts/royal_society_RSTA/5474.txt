inflows and outflows
security model not mentioned none user-level and file-level access
controls
language C++ Java C++

have been developed. Similar ideas have also been applied to multi-core processors,
including the Cell processor. For example, specialized parallel sorting algorithms
have been developed for both GPU processors (Govindaraju et al. 2006) and the
Cell processor (Gedik et al. 2007).

Sphere uses the same basic idea, but extends this paradigm to wide-area
distributed computing. Many of the GPGPU algorithms and applications can be
adapted and run in a distributed fashion using Sphere. In fact, it is this analogue to
GPGPU which inspired our work on Sphere.

There are some important differences though: Sphere uses heterogeneous
distributed computers connected by high-speed, wide-area networks instead of the
identical ALUs integrated in a GPU; Sphere supports more flexible movement of
data, but also requires load balancing and fault tolerance; finally, the bandwidth
setween Sphereâ€™s SPEs, although it may be up to 10 Gbs* |, is not even close to

he bandwidth within a GPU. Owing to these differences, Sphere runs a complete
orocessing function or program on each SPE, rather than one instruction.

One way of viewing GPGPU style programming is as a parallel programming