specifies the scale at which we are representing something.
The number of digits in the significand (digits to the left
of e) specifies the scalar precision, which is to say, the
number of distinguishable quantities at the given scale.
Two digits in the significand implies a precision of roughly
+1%. That is, there are 100 distinguishable quantities at
whatever scale is specified by the exponent.

As remarked earlier, we need a better explanation of
Weber's law (the scalar uncertainty in the brainâ€™s represen-
tation of quantities). Assuming scalar noise in the numerons
themselves has intolerable computational consequences.
Thus, we should take note of the fact that a scheme that divides
a number into an exponent and a significand is a scheme that
obeys Weber's law. The exponent establishes the range of mag-
nitudes, while the number of digits in the significand indicates
how finely quantities within that range are specified. The
imprecision with which a quantity is specified is then propor-
tionate to the scale. Thus, the fixed-point number code
provides an example of physically realized symbols for

unsigned signed | 4 |

integer integer _
represented bit bit represented a