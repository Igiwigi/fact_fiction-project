All computations are carried out on a virtual machine with an Intel Xeon E5-2690 with 16
cores @1.90GHz and 128GB RAM running under Windows Server 2012. The solver we have used
in JuDGE is Gurobi 9.02. The convergence criterion for the stochastic MPEC using JuDGE is set
to a 1% relative gap. In other words, JuDGE terminates when the difference between the upper
and lower bound on the optimal objective value is less than 1% of the upper bound. The objective
referred to here is expected total discounted welfare. JuDGE returns a candidate integer solution
(incumbent) and an upper bound on its value (BestBd). We report the actual relative gap using the
best integer solution found, where the relative gap is defined to be BestBd-V (incumbent) divided
by V (incumbent). This is occasionally significantly smaller than the termination tolerance, due to
the nature of the algorithm.

The deterministic equivalent problems all failed to solve within 3600s on these problems. In
fact, in all but three examples the deterministic equivalent failed to find any integer solutions.
Moreover, for the three examples for which an integer solution was found, the bound-gap
exceeded 25%.

(ii) Varying the number of time periods

The second set of experiments that we have carried out examines how the solution time scales
as we increase the number of time periods in each node of the scenario tree. We will extend the
coal monopolist example from ยง5a(ii), for a scenario tree of depth 3 and degree 3 (13 nodes), with
the number of time periods per node (|T|) increasing from 1 to 12. For each problem instance,
we solve the model using JuDGE, and compare this with the deterministic equivalent MIP, both
stopping when they reach a 1% bound-gap. The results are plotted on a log-scale in figure 5. From
these results, we can see that for small problems, with fewer than six time periods per node, the