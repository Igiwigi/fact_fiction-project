for predictive maintenance [54]. However, few realistic applications have been demonstrated
using intermittent or power-neutral operation. Developing applications for power-neutral and/or
intermittent computers is a challenge, requiring new thinking throughout the stack: from
the design of circuits for power management, selection and integration of energy harvesters,
software, and the entire communications stack. On the topic of energy-driven computers, there
are many research challenges yet to be solved. We highlight what we regard as the main
remaining challenges that are currently hindering adoption: development tools for energy-driven
computers, and wireless communication under intermittent operation.

(a) Simulation, emulation and debugging

Simulation and debugging of energy-driven computers is inherently more complex than for
traditional application-driven ones. This stems from the fact that energy-driven computers adapt
their behaviour according to the amount of available energy. Traditionally, simulations are
performed under the assumption of a steady power supply, so emulating the ISA and platform
is usually sufficient for finding bugs, evaluating performance and developing applications.
However, to correctly simulate the behaviour of an energy-driven computer, execution, power
consumption and power production (harvested energy) must be simulated simultaneously to
correctly model their influence on each other. While previous works have explored simulation of
energy-driven computers, their solutions target only specific processors, and they replay voltage
traces rather than model the complex dynamics of a real energy harvester [55].

Another option is to record current-voltage traces for real energy harvesters, then replay
them with a power-synthesizer to produce a repeatable power source [56,57]. While useful
for performance evaluation, this method does not provide the introspection capabilities of