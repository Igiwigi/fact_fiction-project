process is still an active field of research. Among others, approaches have been developed to
manage such dependencies using business process model and notation (BPMN) [10] or via formal
knowledge representations [11]. The latter uses the notions information, information concretization,
information carrier, actor and system to build a knowledge graph that provides an overview of
available information and its dependencies.


‘While appropriately qualified, interested and motivated people could make do with
imprecisely expressed informational content, electronic information processing systems
absolutely require exact and well-structured definitions’ [12]. Such well-structured definitions
can be realized in the form of ontologies, ie. formalized knowledge bases. Gruber [13]
defines an ontology as an ‘explicit specification of a conceptualization’. While an ontology’s
terminological component (TBox) describes facts about the notions included, its assertional
component (ABox) describes the instance level. Different kinds of ontologies, namely application
ontologies, reference ontologies and top-level ontologies, should be distinguished [14].
Application ontologies rely on specific universals and particulars in combination with inference
mechanisms for executing some specific task [15]. For instance, there is an ontology dedicated
to providing feasibility feedback in early design phases [16]. In contrast, reference ontologies,
such as MASON [17], contain application independent knowledge and can be reused by
various application ontologies. In comparison to application and reference ontologies, top-level
ontologies are the most generic and formalize notions such as continuant and occurrent [15].
Well-known examples include basic formal ontology (BFO) [15] and Descriptive Ontology for
Linguistic and Cognitive Engineering (DOLCE) [18]. Such top-level ontologies allow engineers
to integrate and organize information even across domains [15]. This enables engineers to
combine ontologies and thus increase semantic interoperability. This results both in an increase