PUBLISHING


At the same time, I was in the process of changing my mathematical research speciality,
turning from differential equations to non-associative algebra. One month after attending the
aforementioned conference, I and two co-authors submitted a paper [4] in which the main
theorem was obtained via the assistance of OTTER, an automated theorem prover (ATP) [5]. That
paper changed my career, and since then nearly all of my research has used automated theorem
proving to obtain results in mathematics.

There are many ATPs for an interested mathematician to choose from. The most popular ones
include PROVER9 [6], E [7], WALDMEISTER [8] and VAMPIRE [9]. Most of my own experience has
been with PROVER9 and in fact, only it and E have the necessary infrastructure to implement
the proof simplification techniques I will describe later. Another advantage of PROVER9 for
mathematicians is that its learning curve is less steep and unlike the others, its input language
is easily readable by humans.

ATPs search for proofs by generating and processing inferences much faster than humans can.
If a proof of a goal is found, the prover reports a successful search and in most cases, presents
the proof. An ATP proof consists of a sequence of clauses—where each clause is a conjunction of
atomic formulae (n-ary predicates applied to n terms) or their negations—and the justification for
each clause, that is, the inferences used to derive the clause from its parents.

An important point here is that an ATP will report the first proof it finds. This is rarely an
optimal proof by any measure of optimality. In particular, the first proof found is never (in my