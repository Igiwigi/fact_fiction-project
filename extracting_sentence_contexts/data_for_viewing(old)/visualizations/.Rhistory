labs(title = title,
x = "Year",
y = "per 1000 words",
fill = group_var) +
scale_x_continuous(breaks = function(x) {
default_breaks <- scales::pretty_breaks()(x)
unique(sort(c(min_year, default_breaks, max_year)))
})
}
create_pie_chart <- function(data, word_counts, title, group_var = "Category") {
total_words <- sum(word_counts$TotalWords)
summary_data <- data %>%
group_by(!!sym(group_var), Source) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total_count = sum(count),
percentage = round((count / total_words) * 100, 4))
ggplot(summary_data, aes(x = "", y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
theme_void() +
geom_text(aes(label = paste0(!!sym(group_var), ": ", count, " (", percentage, "%)")),
position = position_stack(vjust = 0.5)) +
labs(title = title,
fill = group_var)
}
# Plot combined data
combined_plot_by_year <- plot_word_distribution_by_year(combined_rs_data, word_counts_combined, "Royal Society: Distribution by Year", "Category")
combined_pie_chart <- create_pie_chart(combined_rs_data, word_counts_combined, "Royal Society: Distribution of Categories", "Category")
# Arrange plots in a grid
combined_grid <- grid.arrange(combined_plot_by_year, combined_pie_chart, ncol = 1, top = "Royal Society Combined Data")
# Save combined data and plots if needed
write.csv(combined_rs_data, "combined_rs_data.csv")
# Function to fix date formats in datasets
fix_dates_data <- function(dataframe) {
if ("Date" %in% names(dataframe) && is.character(dataframe[["Date"]])) {
dataframe[["Date"]] <- parse_date_time(dataframe[["Date"]], orders = "ymd")
dataframe[["Date"]] <- format(dataframe[["Date"]], "%Y-%m-%d")
}
return(dataframe)
}
# Load and preprocess data
load_and_preprocess_data <- function(file_path) {
data <- read_excel(file_path, sheet = 1)
data$Keyword <- as.factor(data$Keyword)
data$Filename <- as.factor(data$Filename)
data <- data %>%
mutate(Category = case_when(
grepl("fact", Keyword, ignore.case = TRUE) ~ "fact",
grepl("fiction", Keyword, ignore.case = TRUE) ~ "fiction"
))
return(data)
}
# Load datasets
rstl_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTL.xlsx")
rstb_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTB.xlsx")
rsta_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTA.xlsx")
# Combine datasets
combined_rs_data <- rbind(rstl_data, rstb_data, rsta_data)
combined_rs_data$Source <- factor(c(rep("RSTL", nrow(rstl_data)),
rep("RSTB", nrow(rstb_data)),
rep("RSTA", nrow(rsta_data))))
# Load and prepare word counts
wc_l <- read.csv("word_counts_rstl.csv")
wc_b <- read.csv("word_counts_rstb.csv")
wc_a <- read.csv("word_counts_rsta.csv")
total_wc_l <- wc_l %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
total_wc_b <- wc_b %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
total_wc_a <- wc_a %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
word_counts_combined <- bind_rows(
total_wc_l %>% mutate(Source = "RSTL"),
total_wc_b %>% mutate(Source = "RSTB"),
total_wc_a %>% mutate(Source = "RSTA")
)
word_counts_combined <- word_counts_combined %>%
group_by(Year, Source) %>%
summarise(TotalWords = sum(TotalWords), .groups = 'drop')
# Plotting functions
plot_word_distribution_by_year <- function(data, word_counts, title, group_var = "Category") {
min_year <- min(year(data$Date), na.rm = TRUE)
max_year <- max(year(data$Date), na.rm = TRUE)
plot_data <- data %>%
mutate(Year = year(Date)) %>%
group_by(Year, !!sym(group_var), Source) %>%
summarise(count = n(), .groups = 'drop') %>%
left_join(word_counts, by = c("Year", "Source")) %>%
mutate(ratio = count / TotalWords * 1000)
ggplot(plot_data, aes(x = Year, y = ratio, fill = !!sym(group_var))) +
geom_bar(stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = title,
x = "Year",
y = "per 1000 words",
fill = group_var) +
scale_x_continuous(breaks = function(x) {
default_breaks <- scales::pretty_breaks()(x)
unique(sort(c(min_year, default_breaks, max_year)))
})
}
create_pie_chart <- function(data, word_counts, title, group_var = "Category") {
total_words <- sum(word_counts$TotalWords)
summary_data <- data %>%
group_by(!!sym(group_var), Source) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total_count = sum(count),
percentage = round((count / total_words) * 100, 4))
ggplot(summary_data, aes(x = "", y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
theme_void() +
geom_text(aes(label = paste0(!!sym(group_var), ": ", count, " (", percentage, "%)")),
position = position_stack(vjust = 0.5)) +
labs(title = title,
fill = group_var)
}
# Plot combined data
combined_plot_by_year <- plot_word_distribution_by_year(combined_rs_data, word_counts_combined, "Royal Society: Distribution by Year", "Category")
combined_pie_chart <- create_pie_chart(combined_rs_data, word_counts_combined, "Royal Society: Distribution of Categories", "Category")
# Arrange plots in a grid
combined_grid <- grid.arrange(combined_plot_by_year, combined_pie_chart, ncol = 1, top = "Royal Society Combined Data")
# Save combined data and plots if needed
write.csv(combined_rs_data, "combined_rs_data.csv")
View(rsta_data)
View(rstb_data)
View(rstl_data)
View(rsta_data)
View(rstb_data)
View(rstl_data)
View(rsta_data)
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(lubridate)
library(gridExtra)
# Function to fix date formats in datasets
fix_dates_data <- function(dataframe) {
if ("Date" %in% names(dataframe) && is.character(dataframe[["Date"]])) {
dataframe[["Date"]] <- parse_date_time(dataframe[["Date"]], orders = "ymd")
dataframe[["Date"]] <- format(dataframe[["Date"]], "%Y-%m-%d")
}
return(dataframe)
}
# Load and preprocess data
load_and_preprocess_data <- function(file_path) {
data <- read_excel(file_path, sheet = 1)
data$Keyword <- as.factor(data$Keyword)
data$Filename <- as.factor(data$Filename)
data <- data %>%
mutate(Category = case_when(
grepl("fact", Keyword, ignore.case = TRUE) ~ "fact",
grepl("fiction", Keyword, ignore.case = TRUE) ~ "fiction",
TRUE ~ NA_character_  # Handle other cases as NA
)) %>%
filter(!is.na(Category))  # Exclude NA values
return(data)
}
# Load datasets
rstl_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTL.xlsx")
rstb_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTB.xlsx")
rsta_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTA.xlsx")
# Combine datasets
combined_rs_data <- rbind(rstl_data, rstb_data, rsta_data)
combined_rs_data$Source <- factor(c(rep("RSTL", nrow(rstl_data)),
rep("RSTB", nrow(rstb_data)),
rep("RSTA", nrow(rsta_data))))
# Load and prepare word counts
wc_l <- read.csv("word_counts_rstl.csv")
wc_b <- read.csv("word_counts_rstb.csv")
wc_a <- read.csv("word_counts_rsta.csv")
total_wc_l <- wc_l %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
total_wc_b <- wc_b %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
total_wc_a <- wc_a %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
word_counts_combined <- bind_rows(
total_wc_l %>% mutate(Source = "RSTL"),
total_wc_b %>% mutate(Source = "RSTB"),
total_wc_a %>% mutate(Source = "RSTA")
)
word_counts_combined <- word_counts_combined %>%
group_by(Year, Source) %>%
summarise(TotalWords = sum(TotalWords), .groups = 'drop')
# Plotting functions
plot_word_distribution_by_year <- function(data, word_counts, title, group_var = "Category") {
min_year <- min(year(data$Date), na.rm = TRUE)
max_year <- max(year(data$Date), na.rm = TRUE)
plot_data <- data %>%
mutate(Year = year(Date)) %>%
group_by(Year, !!sym(group_var), Source) %>%
summarise(count = n(), .groups = 'drop') %>%
left_join(word_counts, by = c("Year", "Source")) %>%
mutate(ratio = count / TotalWords * 1000)
ggplot(plot_data, aes(x = Year, y = ratio, fill = !!sym(group_var))) +
geom_bar(stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = title,
x = "Year",
y = "per 1000 words",
fill = group_var) +
scale_x_continuous(breaks = function(x) {
default_breaks <- scales::pretty_breaks()(x)
unique(sort(c(min_year, default_breaks, max_year)))
})
}
create_pie_chart <- function(data, word_counts, title, group_var = "Category") {
total_words <- sum(word_counts$TotalWords)
summary_data <- data %>%
group_by(!!sym(group_var), Source) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total_count = sum(count),
percentage = round((count / total_words) * 100, 4))
ggplot(summary_data, aes(x = "", y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
theme_void() +
geom_text(aes(label = paste0(!!sym(group_var), ": ", count, " (", percentage, "%)")),
position = position_stack(vjust = 0.5)) +
labs(title = title,
fill = group_var)
}
# Plot combined data
combined_plot_by_year <- plot_word_distribution_by_year(combined_rs_data, word_counts_combined, "Royal Society: Distribution by Year", "Category")
combined_pie_chart <- create_pie_chart(combined_rs_data, word_counts_combined, "Royal Society: Distribution of Categories", "Category")
# Arrange plots in a grid
combined_grid <- grid.arrange(combined_plot_by_year, combined_pie_chart, ncol = 1, top = "Royal Society Combined Data")
# Save combined data and plots if needed
write.csv(combined_rs_data, "combined_rs_data.csv")
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(lubridate)
library(gridExtra)
# Function to fix date formats in datasets
fix_dates_data <- function(dataframe) {
if ("Date" %in% names(dataframe) && is.character(dataframe[["Date"]])) {
dataframe[["Date"]] <- parse_date_time(dataframe[["Date"]], orders = "ymd")
dataframe[["Date"]] <- format(dataframe[["Date"]], "%Y-%m-%d")
}
return(dataframe)
}
# Load and preprocess data
load_and_preprocess_data <- function(file_path) {
data <- read_excel(file_path, sheet = 1)
data$Keyword <- as.factor(data$Keyword)
data$Filename <- as.factor(data$Filename)
data <- data %>%
mutate(Category = case_when(
grepl("fact", Keyword, ignore.case = TRUE) ~ "fact",
grepl("fiction", Keyword, ignore.case = TRUE) ~ "fiction",
TRUE ~ NA_character_  # Handle other cases as NA
)) %>%
filter(!is.na(Category))  # Exclude NA values
return(data)
}
# Load datasets
rstl_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTL.xlsx")
rstb_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTB.xlsx")
rsta_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTA.xlsx")
# Combine datasets
combined_rs_data <- rbind(rstl_data, rstb_data, rsta_data)
combined_rs_data$Source <- factor(c(rep("RSTL", nrow(rstl_data)),
rep("RSTB", nrow(rstb_data)),
rep("RSTA", nrow(rsta_data))))
# Load and prepare word counts
wc_l <- read.csv("word_counts_rstl.csv")
wc_b <- read.csv("word_counts_rstb.csv")
wc_a <- read.csv("word_counts_rsta.csv")
total_wc_l <- wc_l %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
total_wc_b <- wc_b %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
total_wc_a <- wc_a %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
word_counts_combined <- bind_rows(
total_wc_l %>% mutate(Source = "RSTL"),
total_wc_b %>% mutate(Source = "RSTB"),
total_wc_a %>% mutate(Source = "RSTA")
)
word_counts_combined <- word_counts_combined %>%
group_by(Year, Source) %>%
summarise(TotalWords = sum(TotalWords), .groups = 'drop')
# Plotting functions
plot_word_distribution_by_year <- function(data, word_counts, title, group_var = "Category") {
min_year <- min(year(data$Date), na.rm = TRUE)
max_year <- max(year(data$Date), na.rm = TRUE)
plot_data <- data %>%
mutate(Year = year(Date)) %>%
group_by(Year, !!sym(group_var), Source) %>%
summarise(count = n(), .groups = 'drop') %>%
left_join(word_counts, by = c("Year", "Source")) %>%
mutate(ratio = count / TotalWords * 1000)
ggplot(plot_data, aes(x = Year, y = ratio, fill = !!sym(group_var))) +
geom_bar(stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = title,
x = "Year",
y = "per 1000 words",
fill = group_var) +
scale_x_continuous(breaks = function(x) {
default_breaks <- scales::pretty_breaks()(x)
unique(sort(c(min_year, default_breaks, max_year)))
})
}
create_pie_chart <- function(data, word_counts, title, group_var = "Category") {
total_words <- sum(word_counts$TotalWords)
summary_data <- data %>%
group_by(!!sym(group_var), Source) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total_count = sum(count),
percentage = round((count / total_words) * 100, 4))
ggplot(summary_data, aes(x = "", y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
theme_void() +
labs(title = title,
fill = group_var)
}
# Plot combined data
combined_plot_by_year <- plot_word_distribution_by_year(combined_rs_data, word_counts_combined, "Royal Society: Distribution by Year", "Category")
combined_pie_chart <- create_pie_chart(combined_rs_data, word_counts_combined, "Royal Society: Distribution of Categories", "")
# Arrange plots in a grid
combined_grid <- grid.arrange(combined_plot_by_year, combined_pie_chart, ncol = 1, top = "Royal Society Combined Data")
# Save combined data and plots if needed
write.csv(combined_rs_data, "combined_rs_data.csv")
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(lubridate)
library(gridExtra)
# Function to fix date formats in datasets
fix_dates_data <- function(dataframe) {
if ("Date" %in% names(dataframe) && is.character(dataframe[["Date"]])) {
dataframe[["Date"]] <- parse_date_time(dataframe[["Date"]], orders = "ymd")
dataframe[["Date"]] <- format(dataframe[["Date"]], "%Y-%m-%d")
}
return(dataframe)
}
# Load and preprocess data
load_and_preprocess_data <- function(file_path) {
data <- read_excel(file_path, sheet = 1)
data$Keyword <- as.factor(data$Keyword)
data$Filename <- as.factor(data$Filename)
data <- data %>%
mutate(Category = case_when(
grepl("fact", Keyword, ignore.case = TRUE) ~ "fact",
grepl("fiction", Keyword, ignore.case = TRUE) ~ "fiction",
TRUE ~ NA_character_  # Handle other cases as NA
)) %>%
filter(!is.na(Category))  # Exclude NA values
return(data)
}
# Load datasets
rstl_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTL.xlsx")
rstb_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTB.xlsx")
rsta_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTA.xlsx")
# Combine datasets
combined_rs_data <- rbind(rstl_data, rstb_data, rsta_data)
combined_rs_data$Source <- factor(c(rep("RSTL", nrow(rstl_data)),
rep("RSTB", nrow(rstb_data)),
rep("RSTA", nrow(rsta_data))))
# Load and prepare word counts
wc_l <- read.csv("word_counts_rstl.csv")
wc_b <- read.csv("word_counts_rstb.csv")
wc_a <- read.csv("word_counts_rsta.csv")
total_wc_l <- wc_l %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
total_wc_b <- wc_b %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
total_wc_a <- wc_a %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
word_counts_combined <- bind_rows(
total_wc_l %>% mutate(Source = "RSTL"),
total_wc_b %>% mutate(Source = "RSTB"),
total_wc_a %>% mutate(Source = "RSTA")
)
word_counts_combined <- word_counts_combined %>%
group_by(Year, Source) %>%
summarise(TotalWords = sum(TotalWords), .groups = 'drop')
# Plotting functions
plot_word_distribution_by_year <- function(data, word_counts, title, group_var = "Category") {
min_year <- min(year(data$Date), na.rm = TRUE)
max_year <- max(year(data$Date), na.rm = TRUE)
plot_data <- data %>%
mutate(Year = year(Date)) %>%
group_by(Year, !!sym(group_var), Source) %>%
summarise(count = n(), .groups = 'drop') %>%
left_join(word_counts, by = c("Year", "Source")) %>%
mutate(ratio = count / TotalWords * 1000)
ggplot(plot_data, aes(x = Year, y = ratio, fill = !!sym(group_var))) +
geom_bar(stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = title,
x = "Year",
y = "per 1000 words",
fill = group_var) +
scale_x_continuous(breaks = function(x) {
default_breaks <- scales::pretty_breaks()(x)
unique(sort(c(min_year, default_breaks, max_year)))
})
}
create_pie_chart <- function(data, word_counts, title, group_var = "Category") {
total_words <- sum(word_counts$TotalWords)
summary_data <- data %>%
group_by(!!sym(group_var), Source) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total_count = sum(count),
percentage = round((count / total_words) * 100, 4))
ggplot(summary_data, aes(x = "", y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
theme_void() +
geom_text(aes(label = paste0(!!sym(group_var), ": ", count, " (", percentage, "%)")),
position = position_stack(vjust = 0.5)) +
labs(title = title,
fill = group_var)
}
# Plot combined data
combined_plot_by_year <- plot_word_distribution_by_year(combined_rs_data, word_counts_combined, "Royal Society: Distribution by Year", "Category")
combined_pie_chart <- create_pie_chart(combined_rs_data, word_counts_combined, "Royal Society: Distribution of Categories", "Category")
# Arrange plots in a grid
combined_grid <- grid.arrange(combined_plot_by_year, combined_pie_chart, ncol = 1, top = "Royal Society Combined Data")
# Save combined data and plots if needed
write.csv(combined_rs_data, "combined_rs_data.csv")
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(lubridate)
library(gridExtra)
# Function to fix date formats in datasets
fix_dates_data <- function(dataframe) {
if ("Date" %in% names(dataframe) && is.character(dataframe[["Date"]])) {
dataframe[["Date"]] <- parse_date_time(dataframe[["Date"]], orders = "ymd")
dataframe[["Date"]] <- format(dataframe[["Date"]], "%Y-%m-%d")
}
return(dataframe)
}
# Load and preprocess data
load_and_preprocess_data <- function(file_path) {
data <- read_excel(file_path, sheet = 1)
data$Keyword <- as.factor(data$Keyword)
data$Filename <- as.factor(data$Filename)
data <- data %>%
mutate(Category = case_when(
grepl("fact", Keyword, ignore.case = TRUE) ~ "fact",
grepl("fiction", Keyword, ignore.case = TRUE) ~ "fiction",
TRUE ~ NA_character_  # Handle other cases as NA
)) %>%
filter(!is.na(Category))  # Exclude NA values
return(data)
}
# Load datasets
rstl_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTL.xlsx")
rstb_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTB.xlsx")
rsta_data <- load_and_preprocess_data("../ff_royal_society_words_found_context_separate_RSTA.xlsx")
# Combine datasets
combined_rs_data <- rbind(rstl_data, rstb_data, rsta_data)
combined_rs_data$Source <- factor(c(rep("RSTL", nrow(rstl_data)),
rep("RSTB", nrow(rstb_data)),
rep("RSTA", nrow(rsta_data))))
# Load and prepare word counts
wc_l <- read.csv("word_counts_rstl.csv")
wc_b <- read.csv("word_counts_rstb.csv")
wc_a <- read.csv("word_counts_rsta.csv")
total_wc_l <- wc_l %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
total_wc_b <- wc_b %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
total_wc_a <- wc_a %>% rename(Year = 1, TotalWords = 2) %>% mutate(Year = as.numeric(Year))
word_counts_combined <- bind_rows(
total_wc_l %>% mutate(Source = "RSTL"),
total_wc_b %>% mutate(Source = "RSTB"),
total_wc_a %>% mutate(Source = "RSTA")
)
word_counts_combined <- word_counts_combined %>%
group_by(Year, Source) %>%
summarise(TotalWords = sum(TotalWords), .groups = 'drop')
# Plotting functions
plot_word_distribution_by_year <- function(data, word_counts, title, group_var = "Category") {
min_year <- min(year(data$Date), na.rm = TRUE)
max_year <- max(year(data$Date), na.rm = TRUE)
plot_data <- data %>%
mutate(Year = year(Date)) %>%
group_by(Year, !!sym(group_var), Source) %>%
summarise(count = n(), .groups = 'drop') %>%
left_join(word_counts, by = c("Year", "Source")) %>%
mutate(ratio = count / TotalWords * 1000)
ggplot(plot_data, aes(x = Year, y = ratio, fill = !!sym(group_var))) +
geom_bar(stat = "identity", position = "dodge") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(title = title,
x = "Year",
y = "per 1000 words",
fill = group_var) +
scale_x_continuous(breaks = function(x) {
default_breaks <- scales::pretty_breaks()(x)
unique(sort(c(min_year, default_breaks, max_year)))
})
}
create_pie_chart <- function(data, word_counts, title, group_var = "Category") {
total_words <- sum(word_counts$TotalWords)
summary_data <- data %>%
group_by(!!sym(group_var), Source) %>%
summarise(count = n(), .groups = 'drop') %>%
mutate(total_count = sum(count),
percentage = round((count / total_words) * 100, 4))
ggplot(summary_data, aes(x = "", y = count, fill = !!sym(group_var))) +
geom_bar(stat = "identity", width = 1) +
coord_polar("y") +
theme_void() +
labs(title = title,
fill = group_var)
}
# Plot combined data
combined_plot_by_year <- plot_word_distribution_by_year(combined_rs_data, word_counts_combined, "Royal Society: Distribution by Year", "Category")
combined_pie_chart <- create_pie_chart(combined_rs_data, word_counts_combined, "Royal Society: Distribution of Categories", "Category")
# Arrange plots in a grid
combined_grid <- grid.arrange(combined_plot_by_year, combined_pie_chart, ncol = 1, top = "Royal Society Combined Data")
# Save combined data and plots if needed
write.csv(combined_rs_data, "combined_rs_data.csv")
