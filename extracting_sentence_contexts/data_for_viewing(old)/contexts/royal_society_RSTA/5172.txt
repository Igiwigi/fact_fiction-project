series (upper panel) and symbolic segmentation into recurrence domains (bottom panel). (c) RP for ¢ = 0.15. (d) Symbolic
RP resulting from recurrence grammar partitioning. (Online version in colour.)

states. Hence, they appear as ‘blobs’ in the RP figure 1c. Every time the system returns into one
of these recurrence domains, the RP displays such a texture, which is symmetric with respect to
parallel translations along the horizontal and vertical time axes, which is the case for the ‘blobs’
in figure 1c. Other paradigmatic examples for recurrence domains are, for example, the Lorenz
wings centred around the unstable foci of the Lorenz attractor [12], or saddle sets (such as saddle
nodes or saddle tori) that are connected by stable heteroclinic sequences (SHS) as shown in figure 1c
[10,42,43].

In a recent study [38], we have proposed a method for the detection of recurrence domains
by means of symbolic dynamics [4446]. Our approach is motivated by the fact that a
recurrence Rj = 1 leads to overlapping e-balls Be (xj) M Be(xj) # Y that can be merged together into
equivalence classes, which eventually partition, together with their complements and the still
isolated balls, the phase space into its respective recurrence domains. Merging Aj = Be(x;) U Be(xj)
into a set Aj if states x; and x; are recurrent (Rj; = 1) and if i> j, we simply replace the larger time
index i in the RP R by the smaller one j. Let P = {Ay C X|1<k <n} be a finite partition of the
phase space X into n disjoint sets Ay. Then, the discrete trajectory (x;) is mapped onto a symbolic
sequence s = (s;) according to the cells of P being visited by the states xj, ie. sj = k when x; € Ag.

In the study [38], we suggested creating the symbolic sequence s = (s;) from an initial sequence
of time indices rj =i subjected to a rewriting grammar [47], which we refer to henceforth as
the recurrence grammar because this grammar is simply another interpretation of the recurrence
matrix R obtained in equation (2.1). It contains rewriting rules that replace large time indices i by