an unalloyed good, calls for explanation as a principle of software governance must be tempered =

by an analysis of whether explanations improve the human-machine hybrid performance on a
particular task. The choice of this task can also dispel inscrutability, as it takes the focus off of
possibly complex software systems and puts it on the sociotechnical system involving humans
and their tools, concentrating analysis on where trustworthiness is necessary.

In shifting focus away from the technology and toward the overall system including people,
it is additionally important to maintain focus on whether a system is fit for a purpose and meets
its design goals and specification. Fidelity to a system’s specification is one aspect of determining
whether that system is correct, although we might also demand that the specification itself satisfy
design goals or relate properly to the real world [16]. It is important both to validate that a system is
faithful to its specification and to verify that fact to affected parties. Connecting concerns along this
line is a large part of how we define correctness and how we measure whether systems are correct.
Both contribute heavily to how well we can understand and introspect on a system. As we saw
with reviewing design and specification documents, when a system appears to be inscrutable,
it is important to examine the way in which correctness has been defined for that system
and how that correctness has been validated against the real world. If a system’s specification
properly reflects the system’s requirements and design goals—that is, if the system is the result
of proper requirements engineering—then fidelity to that specification demonstrates fitness
for purpose.

5. Conclusion

Thus, we see that the idea of a purely opaque, ‘black-box’ computer system is a category error,